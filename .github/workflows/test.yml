name: TEST Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev

jobs:
  build:
    name: Build & test application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: Install webapp dependencies
        run: |
          cd webapp
          npm install

      - name: Build webapp
        run: |
          cd webapp
          npm run build --if-present

  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps:
      - name: Send result to Slack Webhook
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          STATUS="success"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="failure"
          fi

          BRANCH_NAME="${{ github.ref_name }}"
          AUTHOR_NAME="${{ github.actor }}"
          REPO_URL="https://github.com/${{ github.repository }}"
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"Pipeline *${{ github.workflow }}* finished with status: *$STATUS*\",
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \":construction_worker: *CI/CD Pipeline Notification*\n\n*Repository*: <$REPO_URL|${{ github.repository }}>\n*Branch*: \`$BRANCH_NAME\`\n*Author*: \`$AUTHOR_NAME\`\n*Statut*: *$STATUS*\n*Workflow*: <$RUN_URL|See details>\"
                }
              }
            ]
          }" $SLACK_WEBHOOK_URL
